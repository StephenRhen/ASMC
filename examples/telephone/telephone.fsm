


%event ON_HOOK OFF_HOOK LEFT_OFF_HOOK DIALING_DONE
%event EMERGENCY NYC_TEMP TIME DEPOSIT_MONEY LINE_BUSY INVALID_NUMBER
%event PLAYBACK_DONE INVALID_DIGIT
%event CLOCK_TIMER RING_TIMER OFF_HOOK_TIMER LOOP_TIMER
%event DIGIT

%state OnHook Dialing Routing NYCTemp Time DepositMoney BusySignal
%state PlayingMessage MessagePlayed LeftOffHook InvalidDigit
%state WaitForOnHook

%%

OnHook
  entry
  %{
      updateClock();
      startClockTimer(ClockTimer, 1000);
  %}
  exit
  %{
    stopClockTimer();
  %}
{
  OFF_HOOK    Dialing
  %{
      clearDisplay();
  %};
  CLOCK_TIMER
  %{
      updateClock();
      startClockTimer(ClockTimer, 1000);
  %};
  ON_HOOK;
}

Dialing
{
  DIALING_DONE   Routing
  %{
     /* Perserve comments in the code blocks. */
     routeCall(callType, areaCode, exchange, local);
  %};
  LEFT_OFF_HOOK  LeftOffHook;
  INVALID_DIGIT  InvalidDigit;
}

Routing
{
  EMERGENCY      PlayingMessage
  %{
    play(MSG_EMERGENCY);
  %};
  NYC_TEMP       NYCTemp;
  TIME           Time;
  DEPOSIT_MONEY  DepositMoney;
  LINE_BUSY      BusySignal;
  INVALID_NUMBER PlayingMessage
  %{
    play(MSG_INVALID_NUMBER);
  %};
}

NYCTemp
  entry
  %{
    loop(RINGING);
    startTimer(RingTimer, 10000);
  %}
  exit
  %{
    stopTimer();
    stopLoop();
  %} 
{
  RING_TIMER PlayingMessage
  %{
    play(MSG_NYC_TEMP);
  %};
}

Time
  entry
  %{
    loop(RINGING);
    startTimer(RingTimer, 10000);
  %}
  exit
  %{
    stopTimer(RingTimer);
    stopLoop();
  %}
{
  RING_TIMER PlayingMessage
  %{
    play(MSG_TIME);
  %};
}

DepositMoney
  entry
  %{
    loop(RINGING);
    startTimer(RingTimer, 5000);
  %}
  exit
  %{
    stopTimer(RingTimer);
    stopLoop();
  %}
{
  RING_TIMER PlayingMessage
  %{
    play(MSG_DEPOSIT_MONEY);
  %};
}

BusySignal
  entry
  %{
    loop(BUSY);
  %}
  exit
  %{
    stopLoop();
  %}
{
  // Wait for on hook only.
}

PlayingMessage
{
  // If caller hangs up while a message is being played,
  // be sure to stop the playback.
  ON_HOOK OnHook
  %{
    stopPlay();
    setReceiver(RECEIVER_ON_HOOK);
    clearDisplay();
  %};
  PLAYBACK_DONE MessagePlayed;
}

MessagePlayed
  entry
  %{
    startTimer(OffHookTimer, 10000);
  %}
  exit
  %{
    stopTimer(OffHookTimer);
  %}
{
  OFF_HOOK_TIMER LeftOffHook;
}

//---------------------------------------------------------------
// Error States.
//
// Let someone know the phone has been left off the hook.
LeftOffHook
  entry
  %{
    startTimer(LOOP_TIMER, 10000);
    loop(OFF_HOOK);
  %}
  exit
  %{
    stopTimer(LOOP_TIMER);
    stopLoop();
  %}
{
  LOOP_TIMER WaitForOnHook;
  default;
}

InvalidDigit
  entry
  %{
    startTimer(LOOP_TIMER, 10000);
    loop(FAST_BUSY);
  %}
  exit
  %{
    stopTimer(LOOP_TIMER);
    stopLoop();
  %}
{
  LOOP_TIMER WaitForOnHook;
  default;
}

// Stay in this state until the telephone is on hook.
WaitForOnHook
{
  default;
}

default
{
  // Ignore any dialings after a phone number has been
  // collected.
  DIGIT;  // (ch : char)
  
  DIALING_DONE; // (callType: int, areaCode: int, exchange: int, local: int)
  INVALID_DIGIT;
   
  // No matter when it happens, when the phone is hung
  // up, this call is OVER!
  ON_HOOK OnHook
  %{
    setReceiver(RECEIVER_ON_HOOK);
    clearDisplay();
  %};

  INVALID_DIGIT;
  
  // Ignore the clock timer outside of the OnHook state
  CLOCK_TIMER;
}
